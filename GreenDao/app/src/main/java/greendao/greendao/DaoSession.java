package greendao.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.greendao.UserInfo;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig blogDaoConfig;
    private final DaoConfig commentDaoConfig;
    private final DaoConfig commentReplyDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig userInfoDaoConfig;

    private final BlogDao blogDao;
    private final CommentDao commentDao;
    private final CommentReplyDao commentReplyDao;
    private final UserDao userDao;
    private final UserInfoDao userInfoDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        blogDaoConfig = daoConfigMap.get(BlogDao.class).clone();
        blogDaoConfig.initIdentityScope(type);

        commentDaoConfig = daoConfigMap.get(CommentDao.class).clone();
        commentDaoConfig.initIdentityScope(type);

        commentReplyDaoConfig = daoConfigMap.get(CommentReplyDao.class).clone();
        commentReplyDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        userInfoDaoConfig = daoConfigMap.get(UserInfoDao.class).clone();
        userInfoDaoConfig.initIdentityScope(type);

        blogDao = new BlogDao(blogDaoConfig, this);
        commentDao = new CommentDao(commentDaoConfig, this);
        commentReplyDao = new CommentReplyDao(commentReplyDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        userInfoDao = new UserInfoDao(userInfoDaoConfig, this);

        registerDao(Blog.class, blogDao);
        registerDao(Comment.class, commentDao);
        registerDao(CommentReply.class, commentReplyDao);
        registerDao(User.class, userDao);
        registerDao(UserInfo.class, userInfoDao);
    }
    
    public void clear() {
        blogDaoConfig.clearIdentityScope();
        commentDaoConfig.clearIdentityScope();
        commentReplyDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
        userInfoDaoConfig.clearIdentityScope();
    }

    public BlogDao getBlogDao() {
        return blogDao;
    }

    public CommentDao getCommentDao() {
        return commentDao;
    }

    public CommentReplyDao getCommentReplyDao() {
        return commentReplyDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public UserInfoDao getUserInfoDao() {
        return userInfoDao;
    }

}
